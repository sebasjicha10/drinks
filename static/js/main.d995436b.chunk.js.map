{"version":3,"sources":["components/Header.js","context/ContextCategories.js","context/ContextRecipes.js","components/Form.js","context/ContextModal.js","components/Recipe.js","components/RecipesList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","ContextCategories","createContext","ProviderCategories","props","useState","categories","setCategories","useEffect","a","axios","get","data","drinks","obtainCategories","Provider","value","children","ContextRecipes","ProviderRecipes","recipe","setRecipe","name","category","recipeSearch","setRecipeSearch","consult","setConsult","url","result","obtainRecipes","Form","useContext","search","setSearch","obtainRecipeData","e","target","onSubmit","preventDefault","type","placeholder","onChange","map","strCategory","ContextModal","ProviderModal","idRecipe","setIdRecipe","information","setInformation","obtainRecipe","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","Recipe","modalStyle","open","setOpen","classes","strDrink","src","strDrinkThumb","alt","onClick","idDrink","Modal","onClose","style","strInstructions","ingredients","i","ingredient","push","showIngredients","RecipesList","r","color","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d995436b.chunk.js","sourcesContent":["import React from \"react\"\n\n\nconst Header = () => {\n    return (\n        <header className=\"bg-alert\">\n            <h1>Browse for Drink Recipes</h1>\n        </header>\n    )\n}\n \nexport default Header","import React, { createContext, useState, useEffect } from 'react'\nimport axios from 'axios'\n\n\n// Context\nexport const ContextCategories = createContext()\n\n// Provider\nconst ProviderCategories = (props) => {\n\n    // State\n    const [categories, setCategories] = useState([])\n\n    // Call the API\n    useEffect(() => {\n        const obtainCategories = async () => {\n            const url = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list'\n\n            const categories = await axios.get(url)\n\n            setCategories(categories.data.drinks)\n        }\n        obtainCategories()\n    }, [])\n    \n    return (\n        <ContextCategories.Provider\n            value={{\n                categories\n            }}\n        >\n            {props.children}\n        </ContextCategories.Provider>\n    )\n}\n\nexport default ProviderCategories","import React, { createContext, useState, useEffect } from 'react'\nimport axios from 'axios'\n\n\nexport const ContextRecipes = createContext()\n\nconst ProviderRecipes = (props) => {\n\n    const [recipe, setRecipe] = useState([])\n    const [recipeSearch, setRecipeSearch] = useState({\n        name: \"\",\n        category: \"\"\n    })\n    const [consult, setConsult] = useState(false)\n\n    const { name, category } = recipeSearch\n\n    useEffect(() => {\n        if(consult) {\n            const obtainRecipes = async () => {\n                const url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${name}&c=${category}`\n                const result = await axios.get(url)\n                setRecipe(result.data.drinks)\n            }\n            obtainRecipes()\n        }\n\n    }, [recipeSearch])\n\n    return (\n        <ContextRecipes.Provider\n            value={{\n                recipe,\n                setRecipeSearch, \n                setConsult\n            }}\n        >\n            {props.children}\n        </ContextRecipes.Provider>\n    )\n}\n \nexport default ProviderRecipes","import React, { useContext, useState } from 'react'\nimport { ContextCategories } from '../context/ContextCategories'\nimport { ContextRecipes } from '../context/ContextRecipes'\n\n\nconst Form = () => {\n\n    const { categories } = useContext(ContextCategories)\n    const { setRecipeSearch, setConsult } = useContext(ContextRecipes)\n\n    const [search, setSearch] = useState({\n        name: \"\",\n        category: \"\"\n    })\n\n    // Read Content\n    const obtainRecipeData = e => {\n        setSearch({\n            ...search,\n            [e.target.name]: [e.target.value]\n        })\n    }\n\n    return (  \n        <form\n            className='col-12'\n            onSubmit={e => {\n                e.preventDefault()\n                setRecipeSearch(search)\n                setConsult(true)\n            }}\n        >\n            <fieldset className='text-center'>\n                <legend>\n                    Browse for Drinks by Category or Ingredients\n                </legend>\n            </fieldset>\n            <div className='row mt-4'>\n                <div className='col-md-4'>\n                    <input \n                        name='name'\n                        className='form-control'\n                        type='text'\n                        placeholder='Browse by Ingredient'\n                        onChange={obtainRecipeData}\n                    />\n                </div>\n                <div className='col-md-4'>\n                    <select\n                        className='form-control'\n                        name='category'\n                        onChange={obtainRecipeData}\n                    >\n                        <option value=''>-- Select a Category --</option>\n                        {categories.map(category => (\n                            <option \n                                key={category.strCategory} \n                                value={category.strCategory}\n                            >{category.strCategory}</option>\n                        ))}\n                    </select>\n                </div>\n                <div className='col-md-4'>\n                    <input \n                        type='submit'\n                        className='btn btn-block btn-primary'\n                        value='Search Drinks'\n                    />\n                </div>\n            </div>\n        </form>\n    )\n}\n \nexport default Form","import React, { createContext, useEffect, useState } from 'react'\nimport axios from 'axios'\n\n\n// Context\nexport const ContextModal = createContext()\n\n// Provider\nconst ProviderModal = (props) => {\n\n    // Provider State\n    const [idRecipe, setIdRecipe] = useState(null)\n    const [information, setInformation] = useState({})\n\n    // Call API once recipe is defined\n    useEffect(() => {\n        const obtainRecipe = async () => {\n\n            if(!idRecipe) return\n        \n            const url = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${idRecipe}`\n\n            const result = await axios.get(url)\n\n            setInformation(result.data.drinks[0])\n\n        }\n        obtainRecipe()\n    }, [idRecipe])\n\n    return (  \n        <ContextModal.Provider\n            value={{\n                information,\n                setIdRecipe,\n                setInformation\n            }}\n        >\n            {props.children}\n        </ContextModal.Provider>\n    )\n}\n \nexport default ProviderModal\n\n\n\n","import React, { useContext, useState } from 'react'\nimport { ContextModal } from '../context/ContextModal'\nimport Modal from '@material-ui/core/Modal'\nimport { makeStyles } from '@material-ui/core/styles'\n\n\nconst getModalStyle = () => {\n    const top = 50 \n    const left = 50\n  \n    return {\n      top: `${top}%`,\n      left: `${left}%`,\n      transform: `translate(-${top}%, -${left}%)`,\n    }\n}\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n      position: 'absolute',\n      width: 450,\n      backgroundColor: theme.palette.background.paper,\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n}))\n\nconst Recipe = ({recipe}) => {\n\n    // COnfigurate Material-ui Modal\n    const [modalStyle] = useState(getModalStyle)\n    const [open, setOpen] = useState(false)\n\n    const classes = useStyles()\n\n    const handleOpen = () => {\n        setOpen(true)\n    }\n\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    // Get values from Context\n    const { information, setIdRecipe, setInformation } = useContext(ContextModal)\n\n    // Show and format ingredients\n    const showIngredients = information => {\n        let ingredients = []\n        for(let i = 1; i < 16; i++) {\n            if(information[`strIngredient${i}`]) {\n                const ingredient = information[`strIngredient${i}`]\n                ingredients.push(\n                    <li key={ ingredient }>{ ingredient } { information[`strMeasure${i}`] }</li>\n                )\n            }\n        }\n        return ingredients\n    }\n\n    return (  \n       <div className=\"col-md-4 mb-3\">\n           <div className=\"card\">\n               <h2 className=\"card-header\">{recipe.strDrink}</h2>\n\n               <img className=\"card-img-top\" src={recipe.strDrinkThumb} alt={`Image of ${recipe.strDrink}`} />\n\n               <div className=\"card-body\">\n                   <button\n                        type=\"button\"\n                        className=\"btn btn-block btn-primary\"\n                        onClick={() => {\n                            setIdRecipe(recipe.idDrink)\n                            handleOpen()\n                        }}\n                   >\n                       Check Recipe\n                   </button>\n                   <Modal\n                        open={open}  \n                        onClose={() => {\n                            setIdRecipe(null)\n                            setInformation({})\n                            handleClose()\n                        }}\n                   >\n                       <div style={modalStyle} className={classes.paper}>\n                            <h2>{information.strDrink}</h2>\n                            <h3 className=\"mt-4\">Instructions</h3>\n                            <p>\n                                {information.strInstructions}\n                            </p>\n                            <img className=\"img-fluid m-4\" src={information.strDrinkThumb} />\n                            <h3>Ingredients and Quantities</h3>\n                            <ul>\n                                { showIngredients(information) }\n                            </ul>\n\n                       </div>\n                   </Modal>\n               </div>\n           </div>\n       </div>\n    )\n}\n \nexport default Recipe","import React,{ useContext } from 'react'\nimport Recipe from './Recipe'\nimport { ContextRecipes } from '../context/ContextRecipes'\n\n\nconst RecipesList = () => {\n\n    // Get Recipes\n    const { recipe } = useContext(ContextRecipes)\n\n    // Avoid rendering without Category\n    if(!recipe) {\n        return (\n                <h1 className=\"mt-3 lead\" style={{color: \"#EC3A49\"}}>&#x2191; Category needed</h1>\n        )\n    }\n\n    return ( \n        <div className=\"row mt-5\">\n            {recipe.map(r => (\n                <Recipe \n                    key={r.idDrink}\n                    recipe={r}\n                />\n            ))}\n        </div>\n    )\n}\n \nexport default RecipesList","import React from 'react'\nimport Header from './components/Header'\nimport Form from './components/Form'\nimport RecipesList from './components/RecipesList'\n\nimport ProviderCategories from './context/ContextCategories'\nimport ProviderRecipes from './context/ContextRecipes'\nimport ProviderModal from './context/ContextModal'\n\nfunction App() {\n  return (\n    <ProviderCategories>\n      <ProviderRecipes>\n        <ProviderModal>\n          <Header />\n          <div className='container mt-5'>\n            <div className='row'>\n              <Form />\n            </div>\n            <RecipesList />\n          </div>\n        </ProviderModal>\n      </ProviderRecipes>\n    </ProviderCategories>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}